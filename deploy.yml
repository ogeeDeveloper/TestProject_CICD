- hosts: app_servers
  become: yes
  vars:
    ansible_user: "deployer"
    server_ip: "{{ server_ip }}"
  tasks:
    - name: Ensure the system is updated
      apt:
        update_cache: yes

    - name: Wait for dpkg lock to be released
      shell: |
        while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do
          echo "Waiting for dpkg lock to be released..."
          sleep 5
        done
      become: yes

    - name: Ensure Java is installed
      apt:
        name: openjdk-11-jdk
        state: present
      retries: 5
      delay: 10
      register: result
      until: result is succeeded
      become: yes

    - name: Copy application WAR to server
      copy:
        src: "{{ workspace }}/java-tomcat-sample/target/java-tomcat-sample-0.0.1.war"
        dest: /home/{{ ansible_user }}/java-tomcat-sample.war
      become: yes

    - name: Run the application
      shell: |
        nohup java -jar /home/{{ ansible_user }}/java-tomcat-sample.war > /dev/null 2>&1 &
      args:
        chdir: /home/{{ ansible_user }}
      become: yes

    - name: Wait for the application to start
      pause:
        minutes: 1

    - name: Check if the application is running
      shell: pgrep -f "java -jar /home/{{ ansible_user }}/java-tomcat-sample.war"
      register: app_status
      failed_when: app_status.rc != 0
      become: yes

    - name: Verify application deployment
      uri:
        url: "http://{{ server_ip }}:8080/"
        return_content: yes
      register: response

    - name: Check if application responded successfully
      assert:
        that:
          - response.status == 200
        fail_msg: "Application is not running or not accessible"
